[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"



[project]
name = "secop-ophyd"
dynamic = ["version"]
description = "An Interface between bluesky and SECoP, using ophyd and frappy-client"

dependencies = [
    'ophyd-async >= 0.9.0',
    'frappy-core == 0.20.4'
    
]

license.file = "LICENSE"
readme = "README.md"
requires-python = ">=3.10"

[project.optional-dependencies]
dev = [
    'isort',
    'pytest == 7.4.2',
    'black',
    'flake8',
    "flake8-isort == 6.1.1",
    'pep8-naming',
    "Flake8-pyproject",
    'mypy',
    'wheel',
    'cycler',
    'mlzlog',
    'matplotlib',
    'pytest-asyncio',
    'pytest-xprocess',
    'pre-commit',
    'ipykernel',
    'databroker',
    'ophyd',
    'tox',
    'mlzlog',
    'python-dotenv',
    'bluesky',
    'sphinx',
    'snakefmt'
]






[tool.setuptools.packages.find]
exclude = ["frappy*"]
where = ["src"]  # Add this line

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v"
asyncio_mode="auto"
filterwarnings = "ignore::PendingDeprecationWarning"
norecursedirs=["frappy","epics-testing","build"]

[tool.isort]
float_to_top = true
profile = "black"
skip = [".gitignore"]
known_third_party = ["frappy"]
skip_glob = ["frappy/*","epics-testing/*","src/secop_ophyd/_version.py"]


[[project.authors]] # Further authors may be added by duplicating this section
email = "peter.braun@helmholtz-berlin.de"
name = "Peter Braun"




[tool.flake8]
extend-ignore = [
    "E203", # See https://github.com/PyCQA/pycodestyle/issues/373
    "F811", # support typing.overload decorator
    "F722", # allow Annotated[typ, some_func("some string")]
    "W504",
    "W503",
]
max-line-length = 88 # Respect black's line length (default 88),
exclude = [".tox", "venv","frappy"]


[tool.mypy]
ignore_missing_imports = true          # Ignore missing stubs in imported modules
plugins = ["numpy.typing.mypy_plugin"]
check_untyped_defs = true


[tool.black]
line-length =  88

# tox must currently be configured via an embedded ini string
# See: https://github.com/tox-dev/tox/issues/999
[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist=True

[testenv:{pre-commit,mypy,pytest}]
# Don't create a virtualenv for the command, requires tox-direct plugin
direct = True
passenv = *
allowlist_externals = 
    pytest 
    pre-commit
    mypy
commands =
    pytest: pytest -v .
    mypy: mypy src tests {posargs}
    pre-commit: pre-commit run --all-files {posargs}
"""

[tool.setuptools_scm]
write_to = "src/secop_ophyd/_version.py"
version_file = "src/secop_ophyd/_version.py"