name: Lint, Test and Publish secop-ophyd to PyPI and TestPyPI


on:
  push:
  pull_request:


env:
  WORK_DIR: ${{ github.workspace }}



jobs:

  lint:
    name: Lint Codebase 
    # pull requests are a duplicate of a branch push if within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[dev]

      - name: Lint
        run: |
          tox -e pre-commit,mypy




  test:
    name: Run Tests on Codebase
    # pull requests are a duplicate of a branch push if within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
   
    

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[dev]
   
    - name: Add PATH envirnoment variable for xprocess
      run: |
        pip freeze
        echo "PATH_VAR=$PATH" >> "$GITHUB_ENV"
    
    - name: Run Tests 
      run: |
        tox -e pytest
        
        
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish to PyPI
    if: ${{startsWith(github.ref, 'refs/tags/')}}  # only publish to PyPI on tag pushes
    needs: [lint,test,build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/secop-ophyd  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1











