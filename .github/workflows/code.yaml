name: Lint, Test and Publish secop-ophyd to PyPI and TestPyPI


on:
  push:
  pull_request:


env:
  WORK_DIR: ${{ github.workspace }}



jobs:

  pre-commit:
    name: Static Code Checks
    # pull requests are a duplicate of a branch push if within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: pre-commit/action@v3.0.0


  test:
    name: Run Tests on Codebase
    # pull requests are a duplicate of a branch push if within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}



    - name: Install dependencies
      run: uv sync --all-extras

    - name: Add PATH envirnoment variable for xprocess
      run: |
        echo "PATH_VAR=$PATH" >> "$GITHUB_ENV"

    - name: Run Tests
      run: |
        uv run pytest tests/ -v

  publish-pages:
    runs-on: ubuntu-latest
    #if: ${{startsWith(github.ref, 'refs/tags/')}}  # only publish to PyPI on tag pushes

    strategy:
      matrix:
        python-version: ["3.12"]
      fail-fast: false

    steps:

    - name: Set env.REPOSITORY_NAME  # just the repo, as opposed to org/repo
      shell: bash -l {0}
      run: |
        export REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}
        echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> $GITHUB_ENV

    - uses: actions/checkout@v4

    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install secop-ophyd with all deps
      run: uv sync --all-extras

    - name: Build Docs
      shell: bash -l {0}
      run: uv run make -C docs/ html

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4


  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish to PyPI
    if: ${{startsWith(github.ref, 'refs/tags/')}}  # only publish to PyPI on tag pushes
    needs: [pre-commit,test,build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/secop-ophyd  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
